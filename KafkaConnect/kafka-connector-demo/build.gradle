plugins {
	id 'java'
	id 'org.springframework.boot' version '3.0.0'
	id 'io.spring.dependency-management' version '1.1.0'
}

group = 'com.ndduc'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

repositories {
	jcenter()
	mavenCentral()
	maven {
		url 'https://packages.confluent.io/maven'
	}
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter'
	implementation 'org.springframework.boot:spring-boot-starter-web'
//	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	// https://mvnrepository.com/artifact/org.apache.kafka/kafka-clients
	implementation 'org.apache.kafka:kafka-clients:3.2.0'

	// https://mvnrepository.com/artifact/com.google.code.gson/gson
	implementation 'com.google.code.gson:gson:2.9.0'

	// https://mvnrepository.com/artifact/org.mongodb.kafka/mongo-kafka-connect
	implementation 'org.mongodb.kafka:mongo-kafka-connect:1.8.1'

	// https://mvnrepository.com/artifact/org.mongodb/mongo-java-driver
	implementation 'org.mongodb:mongo-java-driver:3.12.11'

	compileOnly 'org.projectlombok:lombok:1.18.24'
	annotationProcessor 'org.projectlombok:lombok:1.18.24'

	implementation 'org.apache.kafka:kafka-streams'
	implementation 'org.apache.avro:avro'
	implementation 'io.confluent:kafka-streams-avro-serde:5.4.0'

//	testImplementation('org.springframework.boot:spring-boot-starter-test') {
//		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
//	}
//	testImplementation 'org.springframework.kafka:spring-kafka-test'

	// https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-data-mongodb
	implementation 'org.springframework.boot:spring-boot-starter-data-mongodb:3.0.0'

	implementation 'org.springframework.kafka:spring-kafka'
}


//tasks.named('test') {
//	useJUnitPlatform()
//}
